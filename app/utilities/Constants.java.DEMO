/*
 * File: Constants.java
 * Name: Peter Graham
 * Class: CS 461
 * Project 1
 * Date: April 16
 */
package utilities;

import java.util.Arrays;
import java.util.List;
import java.util.regex.Pattern;

/**
 * A collection of public constants used throughout code.
 *
 * URL regex from:
 * http://stackoverflow.com/questions/32637/easiest-way-to-convert-a-url-to-a-
 *      hyperlink-in-a-c-string
 *
 * E-mail regex from:
 * http://www.regular-expressions.info/email.html
 *
 * @author Peter Graham
 * @author Jan Goyvaerts
 * @author Sam Judson
 */
public class Constants {

    /** Secret salt for password hashing */
    public static final String PASSWORD_SALT = "INSERT_SECRET_SALT_HERE";

    /** Session key for logged in users */
    public static final String SESSION_KEY = "logged";

    /** Session key for mobile site enabled/disabled */
    public static final String MOBILE_KEY = "moblie";

    /** name of the "Remember me" cookie */
    public static final String REMEMBER_ME = "rememberme";

    /** name of the original URL flash param */
    public static final String ORIGINAL_URL = "originalurl";

    /** name of the previous URL flash param */
    public static final String PREVIOUS_URL = "previousurl";

    /** the default ordering of content */
    public static final String DEFAULT_ORDER = "popular24h";

    /** list of valid order for filtering */
    public static final List<String> VALID_ORDERS = Arrays.asList(
        "popular24h","popular7d", "recent");

    /** list of valid ISO language codes for the interface */
    public static final List<String> VALID_LANGUAGE_CODES = Arrays.asList(
        "en","ja");

    /** Mobile user-agent substrings for identifying major mobile browsers */
    public static final List<String> MOBILE_USER_AGENTS = Arrays.asList(
            "Android","BlackBerry","iPhone","iPod","Windows Phone");

    /** List of reserved topic names */
    public static final List<String> RESERVED_TOPIC_NAMES = Arrays.asList(
            "you","everyone");

    /** Regular expression for basic (not perfect) e-mail matching */
    public static final Pattern REGEX_EMAIL = Pattern.compile("^[A-Z0-9._%+-]+"
            + "@[A-Z0-9.-]+\\.[A-Z]{2,6}$", Pattern.CASE_INSENSITIVE);

    /** Regular expression for basic (not perfect) URL matching */
    public static final Pattern REGEX_URL = Pattern.compile("^https?://[^ ]+$",
            Pattern.CASE_INSENSITIVE);

    /** Regular expression for validating topic names */
     public static final Pattern REGEX_TOPIC_TITLE = Pattern.compile(
             "^[A-Z0-9_-]+$", Pattern.CASE_INSENSITIVE);

    /** number of updates to show per page */
    public static final int UPDATES_PER_PAGE = 10;

    /** number of topics to show per page */
    public static final int TOPICS_PER_PAGE = 10;
}